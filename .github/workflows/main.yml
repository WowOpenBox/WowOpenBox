# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  push:
    tags:
      - 'v*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout tools repo
        uses: actions/checkout@v4
        with:
          repository: WowOpenBox/BuildKit
          path: buildkit

      - name: Get and set the version
        id: get_version
        run: |
          VERSION=${GITHUB_REF/refs\/tags\//}
          if [[ "${VERSION}" == "refs/heads/main" ]]; then
            VERSION=dev-pre
          fi
          echo ::set-output name=VERSION::${VERSION}
          echo "Version=\"$VERSION\""
          if [ -z "${VERSION##*pre*}" ]; then
            echo ::set-output name=PRERELEASE::true
          else
            echo ::set-output name=PRERELEASE::false
          fi
          sed -e "s/^set vers .*$/set vers \"$VERSION\"/" < WowOpenBox.tcl > WowOpenBox.tkapp
          # This will only work for X.Y.Z so can't get past .9 on Z for instance
          # sed -b -e "s/OpenMultiBoxing-vX.Y.Z.exe/OpenMultiBoxing-$VERSION.exe/" buildkit/OpenMultiBoxing_RR.exe > buildkit/OpenMultiBoxing_RR-$VERSION.exe
        shell: bash
      - name: find mt.exe
        shell: bash
        run: |
          ls -l /c/Program\ Files*/Windows\ Kits/10/bin/*/x64/mt.exe
      - name: Make the executable and zip
        run: |
          cd buildkit
          cp ..\WowOpenBox.tkapp OpenMultiBoxing.vfs\app
          & 'C:\Program Files (x86)\Windows Kits\10\bin\10.0.26100.0\x64\mt.exe' -nologo -manifest ..\app.manifest -outputresource:runtime.exe;#1
          Add-Content -Path OpenMultiBoxing.vfs\tclkit.inf -Value "ProductVersion ""${{ steps.get_version.outputs.VERSION }}""" -PassThru
          tclkit\tclkit.exe sdx\sdx.kit wrap OpenMultiBoxing -runtime runtime.exe
          Rename-Item OpenMultiBoxing WOB2025-${{ steps.get_version.outputs.VERSION }}.exe
          Compress-Archive -Path WOB2025-${{ steps.get_version.outputs.VERSION }}.exe,..\README.txt,..\launchwow.bat,..\launchwowc.bat -DestinationPath WOB2025-${{ steps.get_version.outputs.VERSION }}.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: WOB2025 ${{ steps.get_version.outputs.VERSION }}
          draft: true
          prerelease: ${{ steps.get_version.outputs.PRERELEASE }}

      - name: Upload Zip
        id: upload-release-asset1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: .\buildkit\WOB2025-${{ steps.get_version.outputs.VERSION }}.zip
          asset_name: WOB2025-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip

      - name: Upload Update Code
        id: upload-release-asset2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: WowOpenBox.tkapp
          asset_name: WowOpenBox-${{ steps.get_version.outputs.VERSION }}.tkapp
          asset_content_type: application/octet-stream
